/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coredecomposition.graphics;

import coredecomposition.CoreDecomposition;
import coredecomposition.GenerateGraph;
import java.awt.Toolkit;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author Diomedea Exulans
 */
public class CoreDecompositionMainWin extends javax.swing.JFrame {

    /**
     * Creates new form CoreDecompositionMainWin
     */
    public CoreDecompositionMainWin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generateGraphDialog = new javax.swing.JDialog();
        nrVerticesLabel = new javax.swing.JLabel();
        nrVerticesTextfield = new javax.swing.JTextField();
        cnxProbLabel = new javax.swing.JLabel();
        cnxProbTextfield = new javax.swing.JTextField();
        graphFilenameLabel = new javax.swing.JLabel();
        generateGraphParametersButton = new javax.swing.JButton();
        generateGraphParametersBrowse = new javax.swing.JButton();
        pathTextfield = new javax.swing.JTextField();
        generateGraphParametersCancelBtn = new javax.swing.JButton();
        generateGraphFileChooser = new javax.swing.JFileChooser();
        genericProgressDialog = new javax.swing.JDialog();
        genericProgressLabel = new javax.swing.JLabel();
        genericProgressBar = new javax.swing.JProgressBar();
        inputGraphFileChooser = new javax.swing.JFileChooser();
        windowTitleLabel = new javax.swing.JLabel();
        generateGraphLabel = new javax.swing.JLabel();
        inputGraphLabel = new javax.swing.JLabel();
        generateGraphButton = new javax.swing.JButton();
        inputGraphButton = new javax.swing.JButton();
        imgLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        inputPathTextfield = new javax.swing.JTextField();
        coreDecompButton = new javax.swing.JButton();
        maxMemOptVal = new javax.swing.JTextField();
        resultPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTextarea = new javax.swing.JTextArea();
        maxMemLabel = new javax.swing.JLabel();
        maxMemNote = new javax.swing.JLabel();

        generateGraphDialog.setTitle("Graph parameters");
        generateGraphDialog.setSize(new java.awt.Dimension(320, 225));

        nrVerticesLabel.setText("Number of Vertices");

        cnxProbLabel.setText("Connection Probability");
        cnxProbLabel.setToolTipText("Between 0 and 1. Use '.' for decimals");

        graphFilenameLabel.setText("Output filename");

        generateGraphParametersButton.setText("OK");
        generateGraphParametersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateGraphParametersButtonActionPerformed(evt);
            }
        });

        generateGraphParametersBrowse.setText("Browse...");
        generateGraphParametersBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateGraphParametersBrowseActionPerformed(evt);
            }
        });

        pathTextfield.setEditable(false);

        generateGraphParametersCancelBtn.setText("Cancel");
        generateGraphParametersCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateGraphParametersCancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout generateGraphDialogLayout = new javax.swing.GroupLayout(generateGraphDialog.getContentPane());
        generateGraphDialog.getContentPane().setLayout(generateGraphDialogLayout);
        generateGraphDialogLayout.setHorizontalGroup(
            generateGraphDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generateGraphDialogLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(generateGraphDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pathTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(generateGraphDialogLayout.createSequentialGroup()
                        .addGroup(generateGraphDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cnxProbLabel)
                            .addComponent(graphFilenameLabel)
                            .addComponent(nrVerticesLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(generateGraphDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nrVerticesTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                            .addComponent(cnxProbTextfield)
                            .addComponent(generateGraphParametersBrowse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 37, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, generateGraphDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(generateGraphParametersCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generateGraphParametersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        generateGraphDialogLayout.setVerticalGroup(
            generateGraphDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generateGraphDialogLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(generateGraphDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nrVerticesLabel)
                    .addComponent(nrVerticesTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generateGraphDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cnxProbLabel)
                    .addComponent(cnxProbTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generateGraphDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(graphFilenameLabel)
                    .addComponent(generateGraphParametersBrowse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pathTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(generateGraphDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generateGraphParametersButton)
                    .addComponent(generateGraphParametersCancelBtn))
                .addContainerGap())
        );

        generateGraphFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateGraphFileChooserActionPerformed(evt);
            }
        });

        genericProgressDialog.setSize(new java.awt.Dimension(400, 185));

        genericProgressLabel.setText("Working...");

        genericProgressBar.setBackground(new java.awt.Color(51, 51, 255));
        genericProgressBar.setStringPainted(true);

        javax.swing.GroupLayout genericProgressDialogLayout = new javax.swing.GroupLayout(genericProgressDialog.getContentPane());
        genericProgressDialog.getContentPane().setLayout(genericProgressDialogLayout);
        genericProgressDialogLayout.setHorizontalGroup(
            genericProgressDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(genericProgressDialogLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(genericProgressDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(genericProgressLabel)
                    .addComponent(genericProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        genericProgressDialogLayout.setVerticalGroup(
            genericProgressDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(genericProgressDialogLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(genericProgressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(genericProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        inputGraphFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputGraphFileChooserActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Core Decomposition");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/coredecomposition/assets/wiki_graph_op.png")));
        setLocation(new java.awt.Point(0, 0));

        windowTitleLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        windowTitleLabel.setText("K-core Decomposition");

        generateGraphLabel.setText("Generate Graph: ");

        inputGraphLabel.setText("Input Graph: ");

        generateGraphButton.setText("Generate...");
        generateGraphButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateGraphButtonActionPerformed(evt);
            }
        });

        inputGraphButton.setText("Browse...");
        inputGraphButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputGraphButtonActionPerformed(evt);
            }
        });

        imgLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/coredecomposition/assets/wiki_graph_op.png"))); // NOI18N
        imgLabel.setMaximumSize(new java.awt.Dimension(2038, 1832));
        imgLabel.setMinimumSize(new java.awt.Dimension(2038, 1832));
        imgLabel.setOpaque(true);

        inputPathTextfield.setEnabled(false);

        coreDecompButton.setText("Core Decomposition");
        coreDecompButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coreDecompButtonActionPerformed(evt);
            }
        });

        resultPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        outputTextarea.setEditable(false);
        outputTextarea.setColumns(20);
        outputTextarea.setRows(5);
        jScrollPane1.setViewportView(outputTextarea);

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
        );

        maxMemLabel.setText("Maximum Memory*");

        maxMemNote.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        maxMemNote.setForeground(new java.awt.Color(153, 153, 153));
        maxMemNote.setText("<html>*In number of edges. Will be overriden if too low</html>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(maxMemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(maxMemOptVal, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(inputPathTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maxMemNote, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(coreDecompButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(windowTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(generateGraphLabel)
                                            .addComponent(inputGraphLabel))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(generateGraphButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(inputGraphButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(windowTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(generateGraphLabel)
                            .addComponent(generateGraphButton))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputGraphLabel)
                            .addComponent(inputGraphButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputPathTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(maxMemLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(maxMemOptVal))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(maxMemNote, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(coreDecompButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(imgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateGraphButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateGraphButtonActionPerformed
        nrVerticesTextfield.setText("");
        cnxProbTextfield.setText("");
        pathTextfield.setText("");
        generateGraphDialog.setVisible(true);
        WindowUtilities.centreWindow(generateGraphDialog);
    }//GEN-LAST:event_generateGraphButtonActionPerformed

    private void inputGraphButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputGraphButtonActionPerformed
        inputGraphFileChooser.showOpenDialog(this);
    }//GEN-LAST:event_inputGraphButtonActionPerformed

    private void generateGraphParametersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateGraphParametersButtonActionPerformed

        //Declare variables      
        long nrverts;
        double prob;
        Path filePath;
        
        try{
            //Parse inputs
            nrverts = Long.parseLong(nrVerticesTextfield.getText());
            prob = Double.parseDouble(cnxProbTextfield.getText());
            filePath = generateGraphFileChooser.getSelectedFile().toPath();
            
            //Generate graph
            GenerateGraph gg = new GenerateGraph(nrverts,prob,filePath,genericProgressDialog,generateGraphDialog,genericProgressBar);
            
        }
        catch(Exception e){
            System.out.println("Invalid input");
            System.out.println(e);
        }
    }//GEN-LAST:event_generateGraphParametersButtonActionPerformed

    private void generateGraphParametersBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateGraphParametersBrowseActionPerformed
        generateGraphFileChooser.showOpenDialog(this);
    }//GEN-LAST:event_generateGraphParametersBrowseActionPerformed

    private void generateGraphFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateGraphFileChooserActionPerformed
        if(generateGraphFileChooser.getSelectedFile()!=null){
            pathTextfield.setText(generateGraphFileChooser.getSelectedFile().toString());
        }
    }//GEN-LAST:event_generateGraphFileChooserActionPerformed

    private void generateGraphParametersCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateGraphParametersCancelBtnActionPerformed
        generateGraphDialog.setVisible(false);
    }//GEN-LAST:event_generateGraphParametersCancelBtnActionPerformed

    private void inputGraphFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputGraphFileChooserActionPerformed
        if(inputGraphFileChooser.getSelectedFile()!=null){
            inputPathTextfield.setText(inputGraphFileChooser.getSelectedFile().toString());
        }
    }//GEN-LAST:event_inputGraphFileChooserActionPerformed

    private void coreDecompButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coreDecompButtonActionPerformed
        //Declare variables
        int maxMem = 0;
        Path filePath;
        
        try{
            //Parse inputs
            maxMem = Integer.parseInt(maxMemOptVal.getText());
            filePath = inputGraphFileChooser.getSelectedFile().toPath();
            
            CoreDecomposition cd = new CoreDecomposition(maxMem, filePath, genericProgressDialog, genericProgressBar, outputTextarea);
        }
        catch(Exception e){
            System.out.println("Invalid input");
            System.out.println(e);
        }
    }//GEN-LAST:event_coreDecompButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CoreDecompositionMainWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CoreDecompositionMainWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CoreDecompositionMainWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CoreDecompositionMainWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JFrame fr = new CoreDecompositionMainWin();
                fr.setVisible(true);
                WindowUtilities.centreWindow(fr);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cnxProbLabel;
    private javax.swing.JTextField cnxProbTextfield;
    private javax.swing.JButton coreDecompButton;
    private javax.swing.JButton generateGraphButton;
    private javax.swing.JDialog generateGraphDialog;
    private javax.swing.JFileChooser generateGraphFileChooser;
    private javax.swing.JLabel generateGraphLabel;
    private javax.swing.JButton generateGraphParametersBrowse;
    private javax.swing.JButton generateGraphParametersButton;
    private javax.swing.JButton generateGraphParametersCancelBtn;
    private javax.swing.JProgressBar genericProgressBar;
    private javax.swing.JDialog genericProgressDialog;
    private javax.swing.JLabel genericProgressLabel;
    private javax.swing.JLabel graphFilenameLabel;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JButton inputGraphButton;
    private javax.swing.JFileChooser inputGraphFileChooser;
    private javax.swing.JLabel inputGraphLabel;
    private javax.swing.JTextField inputPathTextfield;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel maxMemLabel;
    private javax.swing.JLabel maxMemNote;
    private javax.swing.JTextField maxMemOptVal;
    private javax.swing.JLabel nrVerticesLabel;
    private javax.swing.JTextField nrVerticesTextfield;
    private javax.swing.JTextArea outputTextarea;
    private javax.swing.JTextField pathTextfield;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JLabel windowTitleLabel;
    // End of variables declaration//GEN-END:variables
}
